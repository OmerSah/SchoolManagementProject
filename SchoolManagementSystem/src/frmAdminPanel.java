
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author omersahin
 */
public class frmAdminPanel extends javax.swing.JFrame {

    Boolean isChanged = false;
    Principal principal = new Principal();

    public Principal getPrincipal() {
        return principal;
    }

    public void setPrincipal(Principal principal) {
        this.principal = principal;
    }
    /**
     * Creates new form deneme
     */
    public frmAdminPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbPerson = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtGuideTeacher = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblParentName = new javax.swing.JLabel();
        btnList = new javax.swing.JButton();
        txtParentName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblGuideTeacher = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel2.setText("Parola:");

        jLabel6.setText("ID:");

        cmbPerson.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Students", "Teachers" }));
        cmbPerson.setToolTipText("");
        cmbPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPersonActionPerformed(evt);
            }
        });

        jLabel3.setText("Email:");

        jLabel4.setText("Telefon:");

        lblParentName.setText("Ebeveyn:");

        btnList.setText("Listele");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        btnAdd.setText("Ekle");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Güncelle");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel1.setText("Ad:");

        lblGuideTeacher.setText("Danışman:");

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ad", "Parola", "Email", "Numara", "Ebeveyn", "Danışman"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudent.getTableHeader().setReorderingAllowed(false);
        tblStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudent);

        btnDelete.setText("Sil");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(cmbPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGuideTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblParentName, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtId)
                            .addComponent(txtPassword)
                            .addComponent(txtName)
                            .addComponent(txtEmail)
                            .addComponent(txtPhone)
                            .addComponent(txtParentName)
                            .addComponent(btnList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(txtGuideTeacher, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnList)
                            .addComponent(cmbPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtParentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblParentName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGuideTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGuideTeacher)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPersonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblStudent.getModel();

        if (cmbPerson.getSelectedItem().equals("Students")) {
            lblParentName.setVisible(true);
            txtParentName.setVisible(true);
            lblGuideTeacher.setVisible(true);
            txtGuideTeacher.setVisible(true);

            if (isChanged) {
                TableColumn t = new TableColumn(5);
                t.setHeaderValue("Ebeveyn");
                TableColumn t1 = new TableColumn(6);
                t1.setHeaderValue("Danışman");
                tblStudent.addColumn(t);
                tblStudent.addColumn(t1);
                model.setRowCount(0);
            }
            isChanged = false;
            
            txtParentName.setText("");
            txtGuideTeacher.setText("");
            
        } else if (cmbPerson.getSelectedItem().equals("Teachers")) {
            lblParentName.setVisible(false);
            txtParentName.setVisible(false);
            lblGuideTeacher.setVisible(false);
            txtGuideTeacher.setVisible(false);

            if (!isChanged) {
                TableColumn tcol = tblStudent.getColumnModel().getColumn(5);
                TableColumn tcol1 = tblStudent.getColumnModel().getColumn(6);
                tblStudent.removeColumn(tcol);
                tblStudent.removeColumn(tcol1);
                model.setRowCount(0);
            }
            isChanged = true;
        }
        txtId.setText("");
        txtName.setText("");
        txtPassword.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        
    }//GEN-LAST:event_cmbPersonActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        // TODO add your handling code here:
        Student st = new Student();
        Teacher tcr = new Teacher();
        DefaultTableModel model = (DefaultTableModel) tblStudent.getModel();
        model.setRowCount(0);

        try {
            if (cmbPerson.getSelectedItem().equals("Students")) {
                ArrayList<Student> student = st.retrieveAll();
                for (Student s : student) {
                    Object[] row = s.getAllElements().toArray();
                    model.addRow(row);
                }
            } else if (cmbPerson.getSelectedItem().equals("Teachers")) {
                ArrayList<Teacher> teacher = tcr.retrieveAll();
                for (Teacher t : teacher) {
                    Object[] row = t.getAllElements().toArray();
                    model.addRow(row);
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getStackTrace());
        }
    }//GEN-LAST:event_btnListActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (cmbPerson.getSelectedItem().equals("Students")) {
            Student st = new Student(
                    txtName.getText(),
                    txtPassword.getText(),
                    txtEmail.getText(),
                    txtPhone.getText(),
                    "",
                    txtParentName.getText(),
                    txtGuideTeacher.getText());

            st.setId(Integer.parseInt(txtId.getText()));

            try {
                principal.addStudent(st);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Bu ID zaten bulunuyor!");
            }

            txtParentName.setText("");
            txtGuideTeacher.setText("");
        } else if (cmbPerson.getSelectedItem().equals("Teachers")) {
            Teacher tch = new Teacher(
                    txtName.getText(),
                    txtPassword.getText(),
                    txtEmail.getText(),
                    txtPhone.getText(),
                    "",
                    "");

            tch.setId(Integer.parseInt(txtId.getText()));

            try {
                principal.addTeacher(tch);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Bu ID zaten bulunuyor!");
            }
        }
        txtId.setText("");
        txtName.setText("");
        txtPassword.setText("");
        txtEmail.setText("");
        txtPhone.setText("");

        this.btnListActionPerformed(evt);
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentMouseClicked
        // TODO add your handling code here:
        if (cmbPerson.getSelectedItem().equals("Students")) {
            txtId.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 0)));
            txtName.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 1)));
            txtPassword.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 2)));
            txtEmail.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 3)));
            txtPhone.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 4)));
            txtParentName.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 5)));
            txtGuideTeacher.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 6)));
        } else if (cmbPerson.getSelectedItem().equals("Teachers")) {
            txtId.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 0)));
            txtName.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 1)));
            txtPassword.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 2)));
            txtEmail.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 3)));
            txtPhone.setText(String.valueOf(tblStudent.getValueAt(tblStudent.getSelectedRow(), 4)));
        }
    }//GEN-LAST:event_tblStudentMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        txtId.setText("");
        txtName.setText("");
        txtPassword.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtParentName.setText("");
        txtGuideTeacher.setText("");
    }//GEN-LAST:event_formMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (cmbPerson.getSelectedItem().equals("Students")) {
            Student st = new Student();
            st.setId(Integer.parseInt(txtId.getText()));

            try {
                principal.deleteStudent(st);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Geçersiz satır!");
            }

            txtParentName.setText("");
            txtGuideTeacher.setText("");

        } else if (cmbPerson.getSelectedItem().equals("Teachers")) {
            Teacher tch = new Teacher();
            tch.setId(Integer.parseInt(txtId.getText()));

            try {
                principal.deleteTeacher(tch);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Geçersiz satır!");
            }
        }
        txtId.setText("");
        txtName.setText("");
        txtPassword.setText("");
        txtEmail.setText("");
        txtPhone.setText("");

        this.btnListActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (cmbPerson.getSelectedItem().equals("Students")) {
            Student st = new Student(
                    txtName.getText(),
                    txtPassword.getText(),
                    txtEmail.getText(),
                    txtPhone.getText(),
                    "",
                    txtParentName.getText(),
                    txtGuideTeacher.getText());

            st.setId(Integer.parseInt(txtId.getText()));

            try {
                principal.updateStudent(st);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Bu ID bulunamadı!");
            }

            txtParentName.setText("");
            txtGuideTeacher.setText("");
            
        } else if (cmbPerson.getSelectedItem().equals("Teachers")) {
            Teacher tch = new Teacher(
                    txtName.getText(),
                    txtPassword.getText(),
                    txtEmail.getText(),
                    txtPhone.getText(),
                    "",
                    "");

            tch.setId(Integer.parseInt(txtId.getText()));

            try {
                principal.updateTeacher(tch);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(frmAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Bu ID bulunamadı!");
            }
        }
        txtId.setText("");
        txtName.setText("");
        txtPassword.setText("");
        txtEmail.setText("");
        txtPhone.setText("");

        this.btnListActionPerformed(evt);
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAdminPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbPerson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGuideTeacher;
    private javax.swing.JLabel lblParentName;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGuideTeacher;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtParentName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
